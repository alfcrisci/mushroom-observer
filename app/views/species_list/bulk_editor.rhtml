<%
  @title = :species_list_bulk_editor_title.t(:name => @species_list.unique_format_name)

  new_tab_set do
    add_tab(:cancel_and_show.t(:type => :species_list), :action => 'show_species_list',
            :id => @species_list.id, :params => query_params)
    add_tab(:species_list_show_edit.t, :action => 'edit_species_list',
            :id => @species_list.id, :params => query_params)
  end
%>

<div class="HelpNote" style="width:800px"><%= :species_list_bulk_editor_help.tp %></div>

<% form_tag(:action => 'bulk_editor', :id => @species_list.id) do %>
  <center><%= submit_tag(:UPDATE.l) %></center><br/>

  <% paginate_block(@pages) do %>
    <table id="observation_table" cellpadding="0" cellspacing="0">
      <% odd_or_even = 0
      for obs in @observations
        odd_or_even = 1 - odd_or_even %>
        <tr valign="top">
          <td align="right" class="cold ListLine<%= odd_or_even %>" style="white-space:nowrap;"
              id="row_<%=obs.id%>" onmouseover="enter_row(<%=obs.id%>)">
            <div style="float:left">
              <%= obs.id %>: <%= obs.format_name.t %>
            </div>
            <%= text_field(:observation, :notes,                 :index => obs.id, :object => obs, :style => "width:40em", :title => :Notes.l) %><br/>
            <%= text_field(:observation, :when_str,              :index => obs.id, :object => obs, :style => "width:6em",  :title => :Date.l) %>
            <%= text_field(:observation, :place_name,            :index => obs.id, :object => obs, :style => "width:40em", :title => :Location.l) %>
            <%= text_field(:observation, :lat,                   :index => obs.id, :object => obs, :style => "width:5em",  :title => :Latitude.l) %>
            <%= text_field(:observation, :long,                  :index => obs.id, :object => obs, :style => "width:5em",  :title => :Longitude.l) %>
            <%= text_field(:observation, :alt,                   :index => obs.id, :object => obs, :style => "width:4em",  :title => :Altitude.l) %>
            <%= check_box(:observation, :is_collection_location, :index => obs.id, :object => obs, :title => :form_observations_is_collection_location_help.l) %>
            <%= check_box(:observation, :specimen,               :index => obs.id, :object => obs, :title => :form_observations_specimen_available_help.l) %>
            <%= menu = @vote_menu
                vote = @votes[obs.id] || @no_vote
                select(:observation, :value, menu, { :object => vote }, { :index => obs.id, :title => :opinion_level.l}) %> &nbsp;
          </td>
          <% imgs = obs.images.select {|i| i.id == obs.thumb_image_id}
          imgs += obs.images
          for img in imgs.uniq %>
            <td valign="middle">
              <%= thumbnail(img, :size => :thumbnail, :obs => obs.id, :class => 'tiny', :target => '_blank') %>
            </td>
          <% end %>
        </tr>
      <% end %>
    </table>
  <% end %>

  <div id="row_controls" class="row_controls">
    <%= :OBSERVATION.t %>:
      <%= url = url_for(:controller => :observer, :action => :show_observation, :id => 'XXX', :params => query_params(@query))
          link_to(:SHOW.l, "javascript:row_button('#{url}')") %> |
      <%= url = url_for(:controller => :observer, :action => :edit_observation, :id => 'XXX', :params => query_params(@query))
          link_to(:EDIT.l, "javascript:row_button('#{url}')") %> |
      <%= url = url_for(:controller => :observer, :action => :destroy_observation, :id => 'XXX', :params => query_params(@query))
          link_to(:DESTROY.l, "javascript:row_button('#{url}')", :confirm => :are_you_sure.l) %>
    &nbsp;
    <%= :NAMES.t %>: (<span id="number_of_names"></span>)
      <%= url = url_for(:controller => :observer, :action => :edit_naming, :observation_id => 'XXX', :params => query_params(@query))
          link_to(:EDIT.l, "javascript:row_button('#{url}')") %> |
      <%= url = url_for(:controller => :observer, :action => :create_naming, :id => 'XXX', :params => query_params(@query))
          link_to(:species_list_bulk_editor_another.l, "javascript:row_button('#{url}')") %>
    &nbsp;
    <%= :COMMENTS.t %>: (<span id="number_of_comments"></span>)
      <%= url = url_for(:controller => :comment, :action => :show_comments_for_target, :id => 'XXX', :type => 'Observation', :params => query_params(@query))
          link_to(:SHOW.l, "javascript:row_button('#{url}')") %> |
      <%= url = url_for(:controller => :comment, :action => :add_comment, :id => 'XXX', :type => 'Observation', :params => query_params(@query))
          link_to(:CREATE.l, "javascript:row_button('#{url}')") %>
    &nbsp;
    <%= :IMAGES.t %>: (<span id="number_of_images"></span>)
      <%= url = url_for(:controller => :image, :action => :add_image, :id => 'XXX', :params => query_params(@query))
          link_to(:UPLOAD.l, "javascript:row_button('#{url}')") %> |
      <%= url = url_for(:controller => :image, :action => :reuse_image, :obs_id => 'XXX', :mode => 'observation', :params => query_params(@query))
          link_to(:species_list_bulk_editor_reuse.l, "javascript:row_button('#{url}')") %> |
      <%= url = url_for(:controller => :image, :action => :remove_images, :id => 'XXX', :params => query_params(@query))
          link_to(:REMOVE.l, "javascript:row_button('#{url}')") %>
  </div>

  <%= first_id = @observations.first.id
    turn_into_location_auto_completer("observation_#{first_id}_place_name", :update_primer_on_blur => true) +
    turn_into_menu_auto_completer("observation_#{first_id}_notes",    :primer => @observations.map(&:notes),    :update_primer_on_blur => true) +
    turn_into_menu_auto_completer("observation_#{first_id}_when_str", :primer => @observations.map(&:when_str), :update_primer_on_blur => true) +
    turn_into_menu_auto_completer("observation_#{first_id}_lat",      :primer => @observations.map(&:lat),      :update_primer_on_blur => true) +
    turn_into_menu_auto_completer("observation_#{first_id}_long",     :primer => @observations.map(&:long),     :update_primer_on_blur => true) +
    turn_into_menu_auto_completer("observation_#{first_id}_alt",      :primer => @observations.map(&:alt),      :update_primer_on_blur => true)
  %>
  <% for obs in @observations %>
    <%= if obs.id != first_id
      reuse_auto_completer("observation_#{first_id}_place_name", "observation_#{obs.id}_place_name") +
      reuse_auto_completer("observation_#{first_id}_notes",      "observation_#{obs.id}_notes") +
      reuse_auto_completer("observation_#{first_id}_when_str",   "observation_#{obs.id}_when_str") +
      reuse_auto_completer("observation_#{first_id}_lat",        "observation_#{obs.id}_lat") +
      reuse_auto_completer("observation_#{first_id}_long",       "observation_#{obs.id}_long") +
      reuse_auto_completer("observation_#{first_id}_alt",        "observation_#{obs.id}_alt")
    end %>
  <% end %>

  <style>
    td.cold {
      border: 0px;
      padding: 5px;
    }
    td.hot {
      border: 1px solid black;
      padding: 4px;
      background: white;
      color: black
    }
    td.hot a, div.row_controls a {
      background: none;
      color: #00C;
    }
    td.hot a:hover, div.row_controls a:hover {
      background: none;
      color: #C00;
    }
    div.row_controls {
      display: none;
      position: absolute;
      text-align: left;
      margin-top: -1px;
      padding: 2px 5px 2px 5px;
      border: 1px solid black;
      border-top: none;
      background: white;
      color: black;
      z-index: 2;
      white-space: nowrap;
    }
    div.tiny img {
      height: 50px;
      margin: 2px;
    }
  </style>

  <%= javascript_tag(%(
    var NUMBER_OF_NAMES    = {#{@observations.map {|o| "#{o.id}:#{o.namings.length}"}.join(',')}};
    var NUMBER_OF_COMMENTS = {#{@observations.map {|o| "#{o.id}:#{o.comments.length}"}.join(',')}};
    var NUMBER_OF_IMAGES   = {#{@observations.map {|o| "#{o.id}:#{o.images.length}"}.join(',')}};
    var current_id = null;
    var ignore_click = false;
    function enter_row(i) {
      if (i != current_id) {
        var old_row = $("row_" + current_id);
        var row = $("row_" + i);
        var div = $("row_controls");
        Position.clone(row, div, {
          setHeight: false,
          setWidth: false,
          offsetTop: row.offsetHeight
        });
        div.style.display = "block";
        row.addClassName("hot");
        if (old_row) old_row.removeClassName("hot");
        $('number_of_names').innerHTML    = NUMBER_OF_NAMES[i];
        $('number_of_comments').innerHTML = NUMBER_OF_COMMENTS[i];
        $('number_of_images').innerHTML   = NUMBER_OF_IMAGES[i];
        current_id = i;
      }
    }
    Event.observe($("observation_table"), 'click', function() { ignore_click = true });
    Event.observe($("row_controls"),      'click', function() { ignore_click = true });
    Event.observe(document, 'click', function () {
      if (current_id != null && !ignore_click) {
        var row = $("row_" + current_id);
        var div = $("row_controls");
        row.removeClassName("hot");
        div.style.display = "none";
        current_id = null;
      }
      ignore_click = false;
    });
    function row_button(url) {
      window.open(url.replace("XXX", current_id));
      current_id = null;
    }
  )) %>

  <br/><center><%= submit_tag(:UPDATE.l) %></center>
<% end %>
